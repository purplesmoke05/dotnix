# Do not modify this file!  It was generated by 'nixos-generate-config'
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];

  # Kernel modules for hardware support
  boot.initrd.availableKernelModules = [ "xhci_pci" "ahci" "nvme" "usb_storage" "sd_mod" ]; # Essential drivers for boot
  boot.initrd.kernelModules = [ ]; # No additional early-boot kernel modules needed
  boot.kernelModules = [ "kvm-intel" ]; # Enable Intel KVM support
  boot.extraModulePackages = [ ]; # No additional kernel modules needed

  # Root filesystem configuration
  fileSystems."/" =
    { device = "/dev/disk/by-uuid/ae2a1a64-b014-43bd-a8d3-8709e13ae12c";
      fsType = "ext4";
    };

  # Boot partition configuration
  fileSystems."/boot" =
    { device = "/dev/disk/by-uuid/9C1E-EFBD";
      fsType = "vfat"; # EFI System Partition
      options = [ "fmask=0077" "dmask=0077" ]; # Secure mount options
    };

  # No swap partition configured
  swapDevices = [ ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlo1.useDHCP = lib.mkDefault true;

  # System architecture and CPU configuration
  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux"; # 64-bit Intel/AMD system
  hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware; # Intel CPU microcode updates
  hardware.enableAllFirmware = true;

  # Graphics hardware configuration
  # - NVIDIA GPU setup with proprietary drivers
  # - Optimized for Wayland compatibility
  # - Power management disabled to prevent issues
  hardware = {
    graphics = {
      enable = true;
      driSupport = true;
      driSupport32Bit = true;
    };
    nvidia = {
      modesetting.enable = true;
      powerManagement.enable = false;
      open = false;
      nvidiaSettings = true;
      package = config.boot.kernelPackages.nvidiaPackages.stable;
    };
    opengl = {
      enable = true;
      driSupport32Bit = true;
      extraPackages = with pkgs; [
        vaapiVdpau
        libvdpau-va-gl
        nvidia-vaapi-driver
      ];
    };
  };
}
